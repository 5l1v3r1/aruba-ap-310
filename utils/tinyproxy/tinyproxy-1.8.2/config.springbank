include $(ARUBA_SRC)/mk/Makefile.rules
include $(ARUBA_SRC)/mk/Makefile.toolsdefs

ifdef NO_OPENSSL
ifeq ($(OEM), siemens)
D_FLAG += -D__OEM_siemens__
else
SSL_DIR=-L$(CYASSL_DIR)/src/.libs -L$(ARUBA_SRC)/cmn/crypto-util/$(OBJDIR)
SSL_LIB=-lcyassl -laruba-crypto-util
SSL_INC= -I$(CYASSL_DIR) -I$(CYASSL_DIR)/cyassl -I$(ARUBA_SRC)/cmn/crypto-util/cyassl
endif
D_FLAG += -D__NO_OPENSSL__ -D__FAT_AP__
else
SSL_INC=-I$(ARUBA_SRC)/openssl/include -I$(ARUBA_SRC)/cmn/crypto-util
SSL_DIR=-L$(OPENSSL_DIR)/$(OBJDIR) -L$(ARUBA_SRC)/cmn/crypto-util/$(OBJDIR)
SSL_LIB=-lssl -lcrypto -laruba-crypto-util
endif

ifdef TBUILD
D_FLAG += -D__EXPERIMENTAL_BUILD__
endif

UCLIBC_TOOLS=$(ARUBA_SRC)/aos-cmn/tools/armv7-linux-gnu-uClibc-0.9.30
UCLIBC_SYSROOT=$(UCLIBC_TOOLS)/usr/arm-buildroot-linux-uclibcgnueabi/sysroot

myconfig:
	CC="$(UCLIBC_TOOLS)/usr/bin/arm-linux-gcc" CFLAGS="-B$(UCLIBC_TOOLS) -B$(UCLIBC_TOOLS)/usr/lib --sysroot=$(UCLIBC_SYSROOT) $(D_FLAG)" CPPFLAGS="-I$(UCLIBC_TOOLS)/usr/include -I$(UCLIBC_SYSROOT)/usr/include $(SSL_INC) -I$(ARUBA_SRC)/cmn" LDFLAGS="-Wl,-rpath-link $(ARUBA_SRC)/usr/lib/aruba/$(OBJDIR) -L$(ARUBA_SRC)/cmn/util/$(OBJDIR) -L$(ARUBA_SRC)/sap/flash/$(OBJDIR) $(SSL_DIR)" LIBS="$(SSL_LIB)" ./configure --host=arm-linux --enable-transparent=yes --enable-regexcheck=no --prefix=
